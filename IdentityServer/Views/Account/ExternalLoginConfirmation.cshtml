@model ExternalLoginConfirmationViewModel
@inject Library Library

@{
    var context = await Library.GetContext();
    var tRegister = context.Read("Account", "Register");
    ViewData["Title"] = tRegister;
}

<div class="hero">
    <div class="hero-body">
        <div class="has-text-centered">
            <div class="column is-4-desktop is-offset-4-desktop  is-6-tablet is-offset-3-tablet">
                <h3 class="title is-font-rock has-text-weight-bold has-text-primary">Tricking Royal</h3>
                <div class="box is-faded">
                    <h3 class="title has-text-white">@context.Read("Account", "AuthWith") <strong>@Model.LoginProvider</strong></h3>
                    <form asp-controller="Account" asp-action="ExternalLoginConfirmation" asp-route-returnurl="@Model.ReturnUrl" method="post">
                        <div class="field">
                            <div class="control">
                                <input class="input" asp-for="Email" placeholder="@context.Read("Account", "Email")" autofocus="email">
                                <span asp-validation-for="Email" class="help is-danger"></span>
                            </div>
                        </div>
                        <div class="field">
                            <div class="control">
                                <input class="input" asp-for="NickName" placeholder="@context.Read("Account", "Username")" autofocus="displayname">
                                <span asp-validation-for="NickName" class="help is-danger"></span>
                            </div>
                        </div>
                        <div class="field">
                            <button type="submit" class="button is-block is-info is-fullwidth">@tRegister</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}